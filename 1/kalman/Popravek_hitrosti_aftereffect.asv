function [nova_vrednost, iteracija_gibanja, predznak, zadetekMejeSlike] = Popravek_hitrosti_aftereffect( pospesek, i, iteracija_gibanja, predznak, vhodni_podatek, vhodni_podatek_raw, zadetekMejeSlike )
    persistent potencialnaNapaka_sum;
    persistent potencialnaNapaka_st;
    
    persistent hitraSpremembaSmeri_st;
    persistent hitraSpremembaSmeri_sum;
    persistent hitraSpremembaSmeri_queue;
    persistent hitraSpremembaSmeri_avg;
    persistent hitraSpremembaSmeri_var;    
    
    pragNapake = 250;
    prag_potencialnaNapaka_sum = 10;
    faktorSkaliranjaPopravkaNapake = 0.65;
    
    mod1_spodnji_prag = 0.05;
    mod1_zgornji_prag = 0.08;
    mod1_prag_preverjanja = 30;
    mod1_prag_variance = 0.004; %POPRAVI
    mod1_prag_upostevanjaPasu = 10;
    
    if iteracija_gibanja == 1
        %nastavim predznak (doloèim ali je trenuten premik v pozitivni
        %ali negativni smeri
        if vhodni_podatek<0
            predznak = -1;
        else
            predznak = 1;
        end;
        
        potencialnaNapaka_sum = 0;
        potencialnaNapaka_st = 0;
        
        hitraSpremembaSmeri_st = 0;
        hitraSpremembaSmeri_sum = 0;
        hitraSpremembaSmeri_queue = zeros(mod1_prag_preverjanja,1);
        hitraSpremembaSmeri_avg = 0;
        hitraSpremembaSmeri_var = 0;    

        %podatek vrenem nespremenjen
        nova_vrednost = vhodni_podatek;
    else
        %Meritev ni veè prva zaznana smer gibanja.
        %Preverim ali je prišlo do spremembe smeri (prvo spremembo
        %smeri zatrem) ali èe smo zadeli mejo slike
        if vhodni_podatek*predznak > 0 && zadetekMejeSlike==0
            %ni spremembe smeri (zadeve ne filtriram)
            nova_vrednost = vhodni_podatek;
        else
            %prišlo je do spremembe smeri hitrosti
            potencialnaNapaka_st = potencialnaNapaka_st + 1;
            
            if(i>279)
               i 
            end
            
            %obvladovanja spremembe smeri ob zadetku v mejo
            if(zadetekMejeSlike==1)
                %zaznana posledica zadetka meje
                
                nova_vrednost = 0;
                potencialnaNapaka_sum = potencialnaNapaka_sum + abs(vhodni_podatek);
                
                %preverim èe smo prekoraèili 
                if(potencialnaNapaka_sum > prag_potencialnaNapaka_sum)
                    %napaèno sem ocenil, ni šlo le za šum ampak za
                    %spremembo smeri. Napako igroniram (predpostavim da je
                    %zanemarljiva)
                    nova_vrednost = vhodni_podatek;
                    
                    %odtranim informacijo, da je v stanju obravnavanja
                    %zadetka meje
                    zadetekMejeSlike = 0;
                    
                    %inicializiram zadevo: beležim kot da je prva iteracija
                    %gibanja
                    iteracija_gibanja = 0;
                end
            else
                %ni zaznanega trka ob mejo
                %MODUL 1
                %Preverjanje hitre spremembe smeri
                %najprej preverim ali smo v obratni hitrosti, kot je bila
                %zaèetna smer, ter nato še èe smo znotraj pasa obravnave.
                (predznak*vhodni_podatek_raw)<0
                mod1_spodnji_prag < abs(vhodni_podatek_raw)
                abs(vhodni_podatek_raw) < mod1_zgornji_prag
                if((predznak*vhodni_podatek_raw)<0 && (mod1_spodnji_prag < abs(vhodni_podatek_raw) && abs(vhodni_podatek_raw) < mod1_zgornji_prag))
                    hitraSpremembaSmeri_st = hitraSpremembaSmeri_st + 1;
                    
                    %prvih 10 meritev ne upoštevam
                    if(hitraSpremembaSmeri_st > mod1_prag_upostevanjaPasu)
                        %raèunam vsoto, da bom potem lahko izraèunal
                        %povpreèje ter posledièno varianco
                        mod1_st = hitraSpremembaSmeri_st - mod1_prag_upostevanjaPasu;
                        hitraSpremembaSmeri_sum = hitraSpremembaSmeri_sum + vhodni_podatek_raw;

                        %shranim meritve
                        hitraSpremembaSmeri_queue(mod1_st) = vhodni_podatek_raw;
                        
                        %pogledam, èe je zadostno število iteracij, da preverim
                        %spremembo smeri
                        if(mod1_st > mod1_prag_preverjanja)
                            %izraèunam varianco
                            hitraSpremembaSmeri_avg = hitraSpremembaSmeri_sum / mod1_st;
                            
                            for mod1_var_st=1:mod1_st
                                hitraSpremembaSmeri_queue
                                i
                                mod1_var_st
                                hitraSpremembaSmeri_avg
                                mod1_var_st-hitraSpremembaSmeri_avg                                
                                
                                hitraSpremembaSmeri_var = hitraSpremembaSmeri_var + power((hitraSpremembaSmeri_queue(mod1_var_st)-hitraSpremembaSmeri_avg),2);
                            end
                            
                            i
                            hitraSpremembaSmeri_var
                            
                            %preverim ali je prišlo do spremembe smeri ali ne
                            %(ali gre le za šum)
                            if(hitraSpremembaSmeri_var > mod1_prag_variance)
                                %prišlo je do hitre spremembe smeri. omogoèim
                                %upoštevanje nove smeri (to naredim tako da
                                %obrnem zaèetno zaznano smer (torej predznak))
                                predznak = predznak * (-1);
                            end

                            %zadevo ponastavim, da tako zaènem novo iteracijo
                            %preverjanje v tem, modulu
                            hitraSpremembaSmeri_st = 0;
                            hitraSpremembaSmeri_sum = 0;
                            hitraSpremembaSmeri_queue = zeros(mod1_prag_preverjanja,1);
                            hitraSpremembaSmeri_avg = 0;
                            hitraSpremembaSmeri_var = 0; 
                        end
                    end
                else
                    %vrednost je izven pasu (ta modul mi ne bo pomagal)
                    hitraSpremembaSmeri_st = 0;
                    hitraSpremembaSmeri_avg = 0;
                    hitraSpremembaSmeri_var = 0;
                end
                
                %MODUL 2
                %preverim ali je prišl do napake pri ocenitvi, da ne gre za
                %spremembo smeri
                if(potencialnaNapaka_st > pragNapake)
                    %napacno sem ocenil. Prišlo je do hitre spremembe smeri.
                    %Novih vrednosti ne bom veè postavil na 0
                    nova_vrednost = vhodni_podatek;

                    %preverim ali popravek sploh obstaja
                    if abs(potencialnaNapaka_sum) > 0                    
                        nova_vrednost = nova_vrednost + (potencialnaNapaka_sum * faktorSkaliranjaPopravkaNapake);
                        %ponastavitev sum-napaka (inicializacija za kasnejše
                        %potencialne napake)
                        potencialnaNapaka_sum = 0;
                    end
                else
                    %trenutno smo še mnenja, da je sprememba smeri le posledica
                    %šuma in NE dejanske spremembe smeri gibanja naprave
                    nova_vrednost = 0;
                    potencialnaNapaka_sum = potencialnaNapaka_sum + vhodni_podatek; %pravilno da NI abs, saj tako upoštevam visoko varianco (ob prehodu èez 0). Abs pa uporabim pri preverjanju
                end 
            end            
        end
    end
end

