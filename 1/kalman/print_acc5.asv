dataTmp = csvread('../../data/acc5.csv');
dataTmp = dataTmp(:,1); %X
data = dataTmp(201:599);

varianca_a = 1.7346;

delta_t = 1 / 200;
data_length = length(data);
x = delta_t:delta_t:((data_length*delta_t));

%iterator (real-time simulator)
for i=1:data_length
    
    %filtering linear acceleration
    if(i-1>0)
        filteredData(i) = Filtering(data, i, 'kalman', {varianca_a, 'pospesek', false});      
    else
        filteredData(i) = 0;
    end
end

plot(x, data, 'color', 'red');
hold on;
plot(x, filteredData, 'color', 'blue');
legend('originalen signal pospeškometra','filtriran signal pospeškometra');
xlabel('Èas (s)');
ylabel('Pospešek (m/s^2)');
hold off;


%izraèun hitrosti in premika (brez pravil)
for i=1:data_length
    
    
    %integracija - hitrost
    if(i-1>0)
        hitrost_raw(i) = hitrost_raw(i-1) + Integration_step(filteredData,i,freq,'trapez');
    else
        hitrost_raw(i) = 0;
    end
    %popravek filtriranja hitrosti
    [nova_hitrost fistRun_hitrost iteracija_gibanja zadetekMejeSlike] =  Popravek_hitrosti(filteredData, hitrost, hitrost_raw, i, fistRun_hitrost, iteracija_gibanja, zadetekMejeSlike);
    hitrost(i) = nova_hitrost;

    %integracija - pozicija
    if(i-1>0)
        pozicija_raw(i) = pozicija_raw(i-1) + Integration_step(hitrost,i,freq,'trapez');
        
        %filtriranje
        %pozicija(i) = Filtering(pozicija_raw, i);
        pozicija(i) = pozicija_raw(i);       
        
    else
        pozicija_raw(i) = 0;
        pozicija(i) = 0;
    end
    
    posTmp = pozicija(i)
    if(i>=400)
        posTmp
    end
    
    %preverjanje trka ob mejo slike
    sprVrednostGledeMej = 0;
    pozicija(i)
    if pozicija(i) < -mejeSistemaX
        sprVrednostGledeMej = -mejeSistemaX;
    end
    if pozicija(i) > mejeSistemaX
        sprVrednostGledeMej = mejeSistemaX;
    end
    %preverim ce je prislo do sprememb mej
    if sprVrednostGledeMej ~= 0
        %omejimo pozicijo
        pozicija(i) = sprVrednostGledeMej;
            pozicija_raw(i) = sprVrednostGledeMej;
        %hitrost tudi postavimo na 0, saj se je zadeva ustavila
        hitrost(i) = 0;
            %hitrost_raw(i) = 0;
        %doloèim da je nov zaèetek gibanja, s èimer se tudi omogoèi
        %instantno spremembo smeri
        iteracija_gibanja = 0;
        
        %shranim informacijo da je prišlo do zadetka v mojo slike
        zadetekMejeSlike = 1;
    end
    
    %popravek pozicije na podlagi kalibracije (skaliranje)
    if(os_z)
        %brez skaliranja z-osi
    else
        %skaliranje x in y osi
        pozicija(i) = pozicija(i) * 2.2;
    end
end

figure(2);
plot(x, data, 'color', 'red');
hold on;
plot(x, filteredData, 'color', 'blue');
legend('originalen signal pospeškometra','filtriran signal pospeškometra');
xlabel('Èas (s)');
ylabel('Pospešek (m/s^2)');
hold off;

